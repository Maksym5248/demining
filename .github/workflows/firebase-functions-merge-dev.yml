# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Functios on merge dev
'on':
    push:
        branches:
            - dev
        paths:
          - 'apps/functions/**'
          - 'packages/shared/**'            
jobs:
    build_and_deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22.11.0
            - name: Install Firebase CLI
              run: yarn global add firebase-tools
            - name: Create service account
              uses: 'google-github-actions/auth@v2'
              with:
                  credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DSNS_DEV_85963 }}'
            - name: Create .env file
              working-directory: ./apps/functions
              run: |
                  echo "${{ secrets.ENV_FUNC_DEV }}" > .env
            - name: Set up config
              working-directory: ./apps/functions
              run: yarn prepare:env
            - name: Install dependencies
              run: yarn install
            - name: Build dependencies
              working-directory: apps/functions
              run: yarn build
            - name: Build and push Docker image for parseBook container
              working-directory: ./apps/functions # Dockerfile and source code are here
              run: |
                  IMAGE_NAME="parsebook-container" # Name for your specific container image
                  IMAGE_TAG="github-${{ github.sha }}" # Use commit SHA as tag for uniqueness
                  # Replace 'my-functions-repo' with your Artifact Registry repository name
                  # Ensure this repo exists in us-central1 (or your chosen region)
                  ARTIFACT_REGISTRY_REPO="gcf-artifacts"
                  # Full image path for Artifact Registry
                  IMAGE_PATH="us-central1-docker.pkg.dev/dsns-dev-85963/${ARTIFACT_REGISTRY_REPO}/${IMAGE_NAME}:${IMAGE_TAG}"

                  echo "Building and pushing container image for parseBook to: ${IMAGE_PATH}"

                  # Use gcloud builds submit to build the image using the Dockerfile in the current directory (apps/functions)
                  # The --tag flag automatically pushes to Artifact Registry after a successful build
                  gcloud builds submit . --tag "${IMAGE_PATH}"

                  # Make the image path available for the next step
                  echo "PARSEBOOK_IMAGE_PATH=${IMAGE_PATH}" >> $GITHUB_ENV
            - name: Deploy parseBook Cloud Function (Container)
              run: |
                  # Use gcloud functions deploy for v2 container deployment
                  gcloud functions deploy parseBook \
                    --gen2 \
                    --runtime=container \
                    --image="${{ env.PARSEBOOK_IMAGE_PATH }}" \
                    --region=eur3 \
                    --trigger-http \
                    # Add other configuration specific to parseBook:
                    # --timeout=600s # Example: set a longer timeout if needed
                    # --memory=1Gi # Example: allocate more memory
                    # --set-env-vars KEY1=VALUE1,KEY2=VALUE2 # Pass runtime environment variables
            - name: Deploy to Firebase
              working-directory: apps/functions
              run: yarn deploy:functions:dev
